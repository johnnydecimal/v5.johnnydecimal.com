---
type Props = {
  blog?: number;
  footnotes: string[];
};

/**
 * If this is a blog post, `blog` is a number. We use it below to make the
 * html ID unique, otherwise on a page of many blog posts it isn't.
 *
 * If this isn't a blog post, `blog` comes in as `undefined`. In this case
 * just make it an empty string so it's ignored when we render the ID.
 */
const { blog = "", footnotes } = Astro.props;
---

<div id="footnotes">
  <hr />
  <ol>
    {
      footnotes.map((footnote: string, n: number) => (
        <li class="footnote" id={`footnote${blog}-${n + 1}`}>
          <p class="footnote">
            <span set:html={footnote} />
            <a class="footback" href={`#footref${blog}-${n + 1}`}>
              &#8617;&#xfe0e;
            </a>
          </p>
        </li>
      ))
    }
  </ol>
</div>

<style lang="scss" is:global>
  // Need global to style the injected content. Control by wrapping
  // everything in the #footnotes selector.
  @use "/src/styles/johnny" as *;

  // With styles here, they don't flow down through 22.01's blog rendering
  // component and on to the page. You tried all sorts, they just don't.
  // So, alas, for now, this is in johnny.scss.
  @include footnote;
</style>
